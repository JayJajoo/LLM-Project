def get_plan_state(index=None):
    if index==1:
        query = "i want to become a web developer in both fron end and back end developement with focus in cloud computing."
        st = {
            "query": query,
            "messages": [[query]],
            "college": "Khoury",
            "department": "Computer Science CS",
            "core_course_numbers": ["CS5800", "CS5010"],
            "max_credits": 32,
            "max_creds_per_sem": 8,
            "min_creds_per_sem": 8,
        }
        return st
    elif index==2:
        query = "i want to become a ML engineer in NLP field , give me a plan."
        st = {
            "query": query,
            "messages": [[query]],
            "college": "Khoury",
            "department": "Data Science",
            "core_course_numbers": ["DS5800","DS5110", "DS5220", "DS5500", "DS5230"],
            "max_credits": 32,
            "max_creds_per_sem": 8,
            "min_creds_per_sem": 8,
        }
        return st
    else:
        query = "I want to be an investment banker in big firm or be one and open a investment firm. and soplease do not include corporate finance elective again as its a coure course already there."

        st = {
            "query": query,
            "messages": [query],
            "college": "D'Amore-McKim School of Business",
            "department": "Finance & Insurance FINA",
            "core_course_numbers":  ["FINA6203", "FINA6331", "FINA6332", "FINA6333", "FINA6334", "FINA6335"],
            "max_credits": 30,
            "min_creds_per_sem": 6,
            "max_creds_per_sem": 6
        }

        return st 

def get_rescheduling_state(query):
    st = {'query': query,
    'rephrased_query': 'Find courses offered by the Department of Computer Science within Khoury College that comprehensively cover the full spectrum of web development, including front-end and back-end technologies. This should encompass foundational programming skills in HTML, CSS, JavaScript, and frameworks like React or Angular; server-side development with Node.js, Django, or Flask; database management with SQL and NoSQL systems; RESTful API design; version control with Git; deployment and CI/CD pipelines; containerization with Docker and Kubernetes; cloud computing platforms such as AWS, Azure, and Google Cloud; serverless architectures; security best practices; performance optimization; and testing methodologies. Include topics on software engineering principles, user experience design, accessibility, and collaborative development tools. The curriculum should prepare a student to build, deploy, and maintain scalable, secure web applications in cloud environments.',
    'main_query': 'i want to become a web developer in both fron end abd back end developement with focus in cloud computing.',
    'messages': ['i want to become a web developer in both fron end abd back end developement with focus in cloud computing.'],
    'college': 'Khoury',
    'department': 'Computer Science CS',
    'intent': 'build_schedule',
    'final_course_list': [{'title': 'Web Development',
    'description': 'Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.',
    'credit_hours': '4',
    'course_number': 'CS5610',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Introduction to Programming for Data Science',
    'description': 'Offers an introductory course on fundamentals of programming and data structures. Covers lists, arrays, trees, hash tables, etc.; program design, programming practices, testing, debugging, maintainability, data collection techniques, and data cleaning and preprocessing. Includes a class project, where students use the concepts covered to collect data from the web, clean and preprocess the data, and make it ready for analysis.',
    'credit_hours': '4',
    'course_number': 'DS5010',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Data Science DS',
    'dept_code': 'DS',
    'prerequisites': 'None'},
    {'title': 'Fundamentals of Cloud Computing',
    'description': 'Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.',
    'credit_hours': '4',
    'course_number': 'CS6620',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Cybersecurity: Technologies, Threats, and Defenses',
    'description': 'Seeks to provide a systematic understanding of cyberspace technology and applications deployed in the global digital infrastructure. Covers topics in computer networks, server architectures, operating systems, and scripting. All the techniques and tools included in the course are oriented to serve as instruments of security administrators and cybersecurity professionals. Uses practical hands-on labs running on virtual machines and containers hosted in the cloud computing environment to train students. For that reason, a practical overview of virtualization technologies, containerization, and cloud computing models is provided.',
    'credit_hours': '4',
    'course_number': 'CY5001',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Cybersecurity CY',
    'dept_code': 'CY',
    'prerequisites': 'None'},
    {'title': 'Introduction to Inclusive Computer Science Teaching',
    'description': 'Introduces teaching computer science (CS) in grades K–12. Focuses on integrating CS concepts with other topic areas. Includes working with multilingual learners—examining student identities with respect to CS and exploring strategies for creating an inclusive CS classroom. Offers students an opportunity to design and practice implementing lesson plans for CS curricula at all grade levels, to explore current research in CS education, and to build a portfolio of teaching resources.',
    'credit_hours': '4',
    'course_number': 'CS5934',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Applied Programming and Data Processing for AI',
    'description': 'Presents an in-depth exploration of programming paradigms, mathematical foundations, and computational techniques essential for scientific computing and data-driven applications. Integrates linear algebra, Python programming principles, algorithmic design, and data science methodologies to offer students an opportunity to develop the technical expertise necessary for handling complex numerical computations and large-scale data processing. Strongly emphasizes Pythonic programming, object-oriented and functional programming, data preprocessing, visualization, and numerical stability, with the aim of developing the skills needed to write clean, efficient, and maintainable code for scientific and engineering applications.',
    'credit_hours': '4',
    'course_number': 'CS5130',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Game Programming',
    'description': 'Covers the skills needed to develop easily scalable and modifiable scripts that can be used to implement various game mechanics common to most game genres. Programming is an integral part of the digital game design and development life cycle. Designed as a foundational game programming course covering numerous aspects of game programming. At least one semester of programming experience in a high-level language is required.',
    'credit_hours': '4',
    'course_number': 'CS5540',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Building Scalable Distributed Systems',
    'description': 'Covers the essential elements of distributed, concurrent systems and builds upon that knowledge with engineering principles and practical experience with state-of-the-art technologies and methods for building scalable systems. Scalability is an essential quality of internet-facing systems and requires specialized skills and knowledge to build systems that scale at low cost.',
    'credit_hours': '4',
    'course_number': 'CS6650',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Mobile Application Development',
    'description': 'Focuses on mobile application development on a mobile phone or related platform. Discusses memory management; user interface building, including both MVC principles and specific tools; touch events; data handling, including core data, SQL, XML, and JSON; network techniques and URL loading; and, finally, specifics such as GPS and motion sensing that may be dependent on the particular mobile platform. Students are expected to work on a project that produces a professional-quality mobile application and to demonstrate the application that they have developed. The instructor chooses a modern mobile platform to be used in the course.',
    'credit_hours': '4',
    'course_number': 'CS5520',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Foundations of Software Engineering',
    'description': 'Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.',
    'credit_hours': '4',
    'course_number': 'CS5500',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'Computer Science 5010 Undergraduate D Or Computer Science 5004 Graduate C Or Computer Science 5010 Graduate C'},
    {'title': 'Web Development Tools and Methods',
    'description': 'Explores advanced server-side technologies and tools necessary to design and engineer complete web-based enterprise applications quickly. Designed to build on previous experience to cover the life cycle of a web-based application. Focuses on MVC web development frameworks to build server-side, data-intensive, and multitier web applications. Additionally, discusses designing rich internet applications (RIA) using AJAX and service-oriented architecture (SOA) using REST.',
    'credit_hours': '4',
    'course_number': 'GSEN6250',
    'college': 'College of Engineering EN',
    'department': 'Grad Engineering - Multidiscpl GSEN',
    'dept_code': 'GSEN',
    'prerequisites': 'Information Systems Program 5100 Graduate B- Or Information Systems Program 5100 Undergraduate B-'},
    {'title': 'Intensive Foundations of Computer Science',
    'description': 'Introduces systematic problem solving through programming. Offers students an opportunity to learn how to analyze a problem, how to divide and organize the problem into appropriate components, how to describe the problem in a computer language, how to analyze and understand the behavior of their programs, and how to test that their programs are working correctly. Additionally, introduces a method of program design called object-oriented programming and various ways to organize data, including a discussion of their advantages and disadvantages. To practice the course concepts, students undertake assignments ranging from small, highly specified programming tasks to larger open-ended problems where students design and code their own solutions.',
    'credit_hours': '4',
    'course_number': 'CS5001',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Foundations of Distributed Systems',
    'description': 'Covers foundational concepts in the design and implementation of efficient and reliable distributed computing systems. Covers internet communication protocols, fault-tolerant computing, synchronization protocols, synchronous and asynchronous computing, dynamic group communication systems, load balancing, Byzantine models, distributed hash tables, distributed file systems, and application of foundational concepts to modern distributed systems in the field. Requires knowledge of operating systems; e.g., an undergraduate course in Systems and Networks, Computer Systems, or Networks and Distributed systems.',
    'credit_hours': '4',
    'course_number': 'CS7610',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Advanced Software Development',
    'description': 'Designed to integrate academic concepts and practical experience of software design by having students work as part of a programming team, with an option to lead a subteam. Offers students an opportunity to study, in-depth, some aspects of the development process. The goal is to have students participate in a large-scale project, taking time to reflect and analyze the work and the process, rather than concentrating exclusively on the final product. Students who do not meet course prerequisites may seek permission of instructor.',
    'credit_hours': '4',
    'course_number': 'CS6510',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': '( Computer Science 5004 Graduate B- Or Computer Science 5010 Graduate C- ) And Computer Science 5500 Graduate C-'},
    {'title': 'Enterprise Software Design',
    'description': 'Designed to build on previous experience in concepts of object-oriented design courses with equal focus in the three areas of architecture, design, and implementation. Instruction and hands-on exercises cover both server-side and client-side web programming. Offers students an opportunity to build a conceptual understanding and to gain practical experience with popular frameworks (Spring MVC, Hibernate, and Dojo or jQuery) that increase productivity, empower developers, and greatly simplify web development. The goal is to be able to build the server side and client side of substantial web-based, client-server, database-intensive, multitier applications.',
    'credit_hours': '4',
    'course_number': 'GSEN6220',
    'college': 'College of Engineering EN',
    'department': 'Grad Engineering - Multidiscpl GSEN',
    'dept_code': 'GSEN',
    'prerequisites': 'Computer Systems Engineering 6200 Graduate B- Or Computer Systems Engineering 6202 Graduate B- Or Computer Systems Engineering 6205 Graduate B-'},
    {'title': 'Coding for Digital Storytelling',
    'description': 'Offers students an opportunity to learn essential skills in coding across a wide range of technologies commonly used today in data-driven, multimodal, web-based storytelling. Focuses on building skills in basic web development, as well as exploring additional topics and technologies that fit into the broader landscape of data storytelling practice (JavaScript visualization library D3.js, basic Python, working with APIs, and working with databases). Coursework consists primarily of team-based projects that focus on reverse-engineering real-world examples of data storytelling to demystify the question, “How did they do that?” Reveals the ways fluency in code can transform storytelling.',
    'credit_hours': '4',
    'course_number': 'JRNL5500',
    'college': 'Coll of Arts, Media & Design AM',
    'department': 'Journalism JRNL',
    'dept_code': 'JRNL',
    'prerequisites': 'None'},
    {'title': 'Intensive Computer Systems',
    'description': 'Studies the structure, components, design, implementation, and internal operation of computer systems, focusing on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Discusses distributed operating systems, real-time systems, and addresses concurrent processes, scheduling, interprocess communication, and synchronization. Discusses relevant distributed algorithms. Also covers design and analysis techniques for desirable properties in computer systems including functional correctness (in the absence of faults), performance and throughput, fault-tolerance and reliability, real-time response, security, and quality of service. Draws examples from real operating systems. Emphasizes abstraction, while programming exercises are used to facilitate the understanding of concepts.',
    'credit_hours': '4',
    'course_number': 'CS7600',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Essentials of Data Science',
    'description': 'Introduces students to the core tasks in data science, including data collection, storage, tidying, transformation, processing, management, and modeling for the purpose of extracting knowledge from raw observations. Programming is a cross-cutting aspect of the course. Offers students an opportunity to gain experience with data science tasks and tools through short assignments. Includes a term project based on real-world data.',
    'credit_hours': '4',
    'course_number': 'DS5110',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Data Science DS',
    'dept_code': 'DS',
    'prerequisites': 'None'},
    {'title': 'Exploring AI Trends and Tools',
    'description': 'Explores key ideas in artificial intelligence while delving into trending developments in the field. Examines AI tools and frameworks to enable collaboration effectively and efficiently across technical and nontechnical stakeholders. Analyzes topics such as AI-enabled perception, representation, reasoning, and learning as contextualized by societal impact. Offers students an opportunity to obtain the knowledge and skills necessary to confidently navigate the ever-evolving landscape of AI.',
    'credit_hours': '4',
    'course_number': 'CS5047',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Formal Specification, Verification, and Synthesis',
    'description': 'Covers software and system modeling (how to formally describe the behavior of software and systems); specification (how to formally state the properties that the system should have); verification (how to check whether—and ultimately prove—that a system satisfies its specification); and synthesis (how to automatically generate software and systems that are "correct-by-construction").',
    'credit_hours': '4',
    'course_number': 'CS7430',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Web Design and User Experience Engineering',
    'description': 'Focuses on advanced user interface engineering, with a strong emphasis on utility and personalized user experiences development. Through the use of tools like React and Flutter, explores how to engineer highly personalized web applications tailored to individual user needs and preferences. Topics include responsive layouts, interactive elements, animation integration, and performance tuning. Offers students an opportunity to gain hands-on experience in building interfaces that dynamically adapt to user behavior, preferences, and context, ensuring a unique and engaging experience for each user.',
    'credit_hours': '4',
    'course_number': 'GSEN6150',
    'college': 'College of Engineering EN',
    'department': 'Grad Engineering - Multidiscpl GSEN',
    'dept_code': 'GSEN',
    'prerequisites': 'Information Systems Program 5100 Graduate B- Or Information Systems Program 5100 Undergraduate B- Or Computer Systems Engineering 6200 Graduate B-'},
    {'title': 'Mixed Reality',
    'description': 'Seeks to provide a strong foundation in the fundamentals of virtual and augmented reality, broadly defined as mixed reality (XR), and hands-on experience developing XR applications. Offers students an opportunity to dive into this burgeoning area of research and practice in computer science. Given the complex nature of XR environments, this course synthesizes theoretical and practice knowledge from various disciplines, including computer graphics, 3D interfaces, human-computer interaction, tracking systems, and perceptual psychology (to name a few). XR technologies have recently witnessed a resurgence of interest.',
    'credit_hours': '4',
    'course_number': 'CS5097',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Foundations of Software Security',
    'description': 'Provides an overview of various software security threats and some of the most effective countermeasures used to thwart both well-known and newly emerging software security threats. Introduces best practices and tools available to help minimize common software security attacks, recognizing that it is impossible to accomplish “perfect security” in software. Also studies secure coding concepts, tools, and practices in a high-level programming language.',
    'credit_hours': '4',
    'course_number': 'CY5003',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Cybersecurity CY',
    'dept_code': 'CY',
    'prerequisites': 'None'},
    {'title': 'Practicum',
    'description': 'Provides eligible students with an opportunity for practical experience.',
    'credit_hours': '2 TO 4',
    'course_number': 'CS6966',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Building Game Engines',
    'description': 'Discusses the components of game engines and strategies for their software implementation. Includes graphics management algorithms (animation, scene graph, level of detail); basic artificial intelligence algorithms (search, decision making, sensing); and related algorithmic issues (networking, threading, input processing). Explores the use of data-driven software design. Offers students an opportunity to use a rendering engine and to build and integrate several software components to create a complete game engine. Requires students to work on individual assignments and then develop a project in a team, which requires a report. Offers students an opportunity to learn team/project management; work division; team communication; and the software development cycle of implementation, testing, critique, and further iteration. Requires knowledge of computer graphics, differential calculus, operating systems concepts, and algorithms.',
    'credit_hours': '4',
    'course_number': 'CS5850',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Computer Systems',
    'description': 'Studies the structure, components, design, implementation, and internal operation of computer systems, focusing mainly on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Introduces distributed operating systems. Discusses issues arising from concurrency and distribution, such as scheduling of concurrent processes, interprocess communication and synchronization, resource sharing and allocation, and deadlock management and resolution. Includes examples from real operating systems. Exposes students to the system concepts through programming exercises. Requires admission to MS program or completion of all transition courses.',
    'credit_hours': '4',
    'course_number': 'CS5600',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Directed Study',
    'description': 'Focuses on student examining standard computer science material in fresh ways or new computer science material that is not covered in formal courses. May be repeated without limit.',
    'credit_hours': '2 TO 4',
    'course_number': 'CS7976',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Smartphones-Based Web Development',
    'description': 'Covers application development for mobile devices using advanced development platforms. Focuses on how to write mobile applications using cross-platform development tools and processes. Topics include user interfaces, the software life cycle, persistent storage, networking using HTTP and other REST interfaces, and mobile/handheld data applications. Requires a final project.',
    'credit_hours': '4',
    'course_number': 'GSEN6350',
    'college': 'College of Engineering EN',
    'department': 'Grad Engineering - Multidiscpl GSEN',
    'dept_code': 'GSEN',
    'prerequisites': 'Information Systems Program 5100 Graduate B- Or Information Systems Program 5100 Undergraduate B- Or Computer Systems Engineering 6200 Graduate B-'},
    {'title': 'Data Science Capstone',
    'description': 'Offers students a capstone opportunity to practice data science skills learned in previous courses and to build a portfolio. Students practice visualization, data wrangling, and machine learning skills by applying them to semester-long term projects on real-world data. Students may either propose their own projects or choose from a selection of industry options. Emphasizes the overall data science process, including identification of the scientific problem, selection of appropriate machine learning methods, and visualization and communication of results. Lectures may include additional topics, including visualization, communication, and data science ethics.',
    'credit_hours': '4',
    'course_number': 'DS5500',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Data Science DS',
    'dept_code': 'DS',
    'prerequisites': '( Computer Science 5800 Graduate C- Or Electrical and Comp Engineerng 7205 Graduate C- ) And Data Science 5110 Graduate C- And Data Science 5220 Graduate C- And Data Science 5230 Graduate C-'},
    {'title': 'Directed Study',
    'description': 'Focuses on student examining standard computer science material in fresh ways or new computer science material that is not covered in formal courses. May be repeated up to three times.',
    'credit_hours': '2 TO 4',
    'course_number': 'CS5976',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Topics',
    'description': 'Offers students an opportunity to learn about timely issues, develop new skills, or explore areas of broad interest in an immersive, short-course format. Content and instructors vary by offering.',
    'credit_hours': '2',
    'course_number': 'CS5963',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'}],
    'course_list': [{'title': 'Web Development',
    'description': 'Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.',
    'credit_hours': '4',
    'course_number': 'CS5610',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Introduction to Programming for Data Science',
    'description': 'Offers an introductory course on fundamentals of programming and data structures. Covers lists, arrays, trees, hash tables, etc.; program design, programming practices, testing, debugging, maintainability, data collection techniques, and data cleaning and preprocessing. Includes a class project, where students use the concepts covered to collect data from the web, clean and preprocess the data, and make it ready for analysis.',
    'credit_hours': '4',
    'course_number': 'DS5010',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Data Science DS',
    'dept_code': 'DS',
    'prerequisites': 'None'},
    {'title': 'Fundamentals of Cloud Computing',
    'description': 'Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.',
    'credit_hours': '4',
    'course_number': 'CS6620',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Cybersecurity: Technologies, Threats, and Defenses',
    'description': 'Seeks to provide a systematic understanding of cyberspace technology and applications deployed in the global digital infrastructure. Covers topics in computer networks, server architectures, operating systems, and scripting. All the techniques and tools included in the course are oriented to serve as instruments of security administrators and cybersecurity professionals. Uses practical hands-on labs running on virtual machines and containers hosted in the cloud computing environment to train students. For that reason, a practical overview of virtualization technologies, containerization, and cloud computing models is provided.',
    'credit_hours': '4',
    'course_number': 'CY5001',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Cybersecurity CY',
    'dept_code': 'CY',
    'prerequisites': 'None'},
    {'title': 'Introduction to Inclusive Computer Science Teaching',
    'description': 'Introduces teaching computer science (CS) in grades K–12. Focuses on integrating CS concepts with other topic areas. Includes working with multilingual learners—examining student identities with respect to CS and exploring strategies for creating an inclusive CS classroom. Offers students an opportunity to design and practice implementing lesson plans for CS curricula at all grade levels, to explore current research in CS education, and to build a portfolio of teaching resources.',
    'credit_hours': '4',
    'course_number': 'CS5934',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Applied Programming and Data Processing for AI',
    'description': 'Presents an in-depth exploration of programming paradigms, mathematical foundations, and computational techniques essential for scientific computing and data-driven applications. Integrates linear algebra, Python programming principles, algorithmic design, and data science methodologies to offer students an opportunity to develop the technical expertise necessary for handling complex numerical computations and large-scale data processing. Strongly emphasizes Pythonic programming, object-oriented and functional programming, data preprocessing, visualization, and numerical stability, with the aim of developing the skills needed to write clean, efficient, and maintainable code for scientific and engineering applications.',
    'credit_hours': '4',
    'course_number': 'CS5130',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Game Programming',
    'description': 'Covers the skills needed to develop easily scalable and modifiable scripts that can be used to implement various game mechanics common to most game genres. Programming is an integral part of the digital game design and development life cycle. Designed as a foundational game programming course covering numerous aspects of game programming. At least one semester of programming experience in a high-level language is required.',
    'credit_hours': '4',
    'course_number': 'CS5540',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Building Scalable Distributed Systems',
    'description': 'Covers the essential elements of distributed, concurrent systems and builds upon that knowledge with engineering principles and practical experience with state-of-the-art technologies and methods for building scalable systems. Scalability is an essential quality of internet-facing systems and requires specialized skills and knowledge to build systems that scale at low cost.',
    'credit_hours': '4',
    'course_number': 'CS6650',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Mobile Application Development',
    'description': 'Focuses on mobile application development on a mobile phone or related platform. Discusses memory management; user interface building, including both MVC principles and specific tools; touch events; data handling, including core data, SQL, XML, and JSON; network techniques and URL loading; and, finally, specifics such as GPS and motion sensing that may be dependent on the particular mobile platform. Students are expected to work on a project that produces a professional-quality mobile application and to demonstrate the application that they have developed. The instructor chooses a modern mobile platform to be used in the course.',
    'credit_hours': '4',
    'course_number': 'CS5520',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Foundations of Software Engineering',
    'description': 'Covers the foundations of software engineering, including software development life cycle models (e.g., waterfall, spiral, agile); requirements analysis; user-centered design; software design principles and patterns; testing (functional testing, structural testing, testing strategies); code refactoring and debugging; software architecture and design; and integration and deployment. Includes a course project where some of the software engineering methods (from requirements analysis to testing) are applied in a team-based setting. Requires admission to MS program or completion of all transition courses.',
    'credit_hours': '4',
    'course_number': 'CS5500',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'Computer Science 5010 Undergraduate D Or Computer Science 5004 Graduate C Or Computer Science 5010 Graduate C'},
    {'title': 'Web Development Tools and Methods',
    'description': 'Explores advanced server-side technologies and tools necessary to design and engineer complete web-based enterprise applications quickly. Designed to build on previous experience to cover the life cycle of a web-based application. Focuses on MVC web development frameworks to build server-side, data-intensive, and multitier web applications. Additionally, discusses designing rich internet applications (RIA) using AJAX and service-oriented architecture (SOA) using REST.',
    'credit_hours': '4',
    'course_number': 'GSEN6250',
    'college': 'College of Engineering EN',
    'department': 'Grad Engineering - Multidiscpl GSEN',
    'dept_code': 'GSEN',
    'prerequisites': 'Information Systems Program 5100 Graduate B- Or Information Systems Program 5100 Undergraduate B-'},
    {'title': 'Intensive Foundations of Computer Science',
    'description': 'Introduces systematic problem solving through programming. Offers students an opportunity to learn how to analyze a problem, how to divide and organize the problem into appropriate components, how to describe the problem in a computer language, how to analyze and understand the behavior of their programs, and how to test that their programs are working correctly. Additionally, introduces a method of program design called object-oriented programming and various ways to organize data, including a discussion of their advantages and disadvantages. To practice the course concepts, students undertake assignments ranging from small, highly specified programming tasks to larger open-ended problems where students design and code their own solutions.',
    'credit_hours': '4',
    'course_number': 'CS5001',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Foundations of Distributed Systems',
    'description': 'Covers foundational concepts in the design and implementation of efficient and reliable distributed computing systems. Covers internet communication protocols, fault-tolerant computing, synchronization protocols, synchronous and asynchronous computing, dynamic group communication systems, load balancing, Byzantine models, distributed hash tables, distributed file systems, and application of foundational concepts to modern distributed systems in the field. Requires knowledge of operating systems; e.g., an undergraduate course in Systems and Networks, Computer Systems, or Networks and Distributed systems.',
    'credit_hours': '4',
    'course_number': 'CS7610',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Advanced Software Development',
    'description': 'Designed to integrate academic concepts and practical experience of software design by having students work as part of a programming team, with an option to lead a subteam. Offers students an opportunity to study, in-depth, some aspects of the development process. The goal is to have students participate in a large-scale project, taking time to reflect and analyze the work and the process, rather than concentrating exclusively on the final product. Students who do not meet course prerequisites may seek permission of instructor.',
    'credit_hours': '4',
    'course_number': 'CS6510',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': '( Computer Science 5004 Graduate B- Or Computer Science 5010 Graduate C- ) And Computer Science 5500 Graduate C-'},
    {'title': 'Enterprise Software Design',
    'description': 'Designed to build on previous experience in concepts of object-oriented design courses with equal focus in the three areas of architecture, design, and implementation. Instruction and hands-on exercises cover both server-side and client-side web programming. Offers students an opportunity to build a conceptual understanding and to gain practical experience with popular frameworks (Spring MVC, Hibernate, and Dojo or jQuery) that increase productivity, empower developers, and greatly simplify web development. The goal is to be able to build the server side and client side of substantial web-based, client-server, database-intensive, multitier applications.',
    'credit_hours': '4',
    'course_number': 'GSEN6220',
    'college': 'College of Engineering EN',
    'department': 'Grad Engineering - Multidiscpl GSEN',
    'dept_code': 'GSEN',
    'prerequisites': 'Computer Systems Engineering 6200 Graduate B- Or Computer Systems Engineering 6202 Graduate B- Or Computer Systems Engineering 6205 Graduate B-'},
    {'title': 'Coding for Digital Storytelling',
    'description': 'Offers students an opportunity to learn essential skills in coding across a wide range of technologies commonly used today in data-driven, multimodal, web-based storytelling. Focuses on building skills in basic web development, as well as exploring additional topics and technologies that fit into the broader landscape of data storytelling practice (JavaScript visualization library D3.js, basic Python, working with APIs, and working with databases). Coursework consists primarily of team-based projects that focus on reverse-engineering real-world examples of data storytelling to demystify the question, “How did they do that?” Reveals the ways fluency in code can transform storytelling.',
    'credit_hours': '4',
    'course_number': 'JRNL5500',
    'college': 'Coll of Arts, Media & Design AM',
    'department': 'Journalism JRNL',
    'dept_code': 'JRNL',
    'prerequisites': 'None'},
    {'title': 'Intensive Computer Systems',
    'description': 'Studies the structure, components, design, implementation, and internal operation of computer systems, focusing on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Discusses distributed operating systems, real-time systems, and addresses concurrent processes, scheduling, interprocess communication, and synchronization. Discusses relevant distributed algorithms. Also covers design and analysis techniques for desirable properties in computer systems including functional correctness (in the absence of faults), performance and throughput, fault-tolerance and reliability, real-time response, security, and quality of service. Draws examples from real operating systems. Emphasizes abstraction, while programming exercises are used to facilitate the understanding of concepts.',
    'credit_hours': '4',
    'course_number': 'CS7600',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Essentials of Data Science',
    'description': 'Introduces students to the core tasks in data science, including data collection, storage, tidying, transformation, processing, management, and modeling for the purpose of extracting knowledge from raw observations. Programming is a cross-cutting aspect of the course. Offers students an opportunity to gain experience with data science tasks and tools through short assignments. Includes a term project based on real-world data.',
    'credit_hours': '4',
    'course_number': 'DS5110',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Data Science DS',
    'dept_code': 'DS',
    'prerequisites': 'None'},
    {'title': 'Exploring AI Trends and Tools',
    'description': 'Explores key ideas in artificial intelligence while delving into trending developments in the field. Examines AI tools and frameworks to enable collaboration effectively and efficiently across technical and nontechnical stakeholders. Analyzes topics such as AI-enabled perception, representation, reasoning, and learning as contextualized by societal impact. Offers students an opportunity to obtain the knowledge and skills necessary to confidently navigate the ever-evolving landscape of AI.',
    'credit_hours': '4',
    'course_number': 'CS5047',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Formal Specification, Verification, and Synthesis',
    'description': 'Covers software and system modeling (how to formally describe the behavior of software and systems); specification (how to formally state the properties that the system should have); verification (how to check whether—and ultimately prove—that a system satisfies its specification); and synthesis (how to automatically generate software and systems that are "correct-by-construction").',
    'credit_hours': '4',
    'course_number': 'CS7430',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Web Design and User Experience Engineering',
    'description': 'Focuses on advanced user interface engineering, with a strong emphasis on utility and personalized user experiences development. Through the use of tools like React and Flutter, explores how to engineer highly personalized web applications tailored to individual user needs and preferences. Topics include responsive layouts, interactive elements, animation integration, and performance tuning. Offers students an opportunity to gain hands-on experience in building interfaces that dynamically adapt to user behavior, preferences, and context, ensuring a unique and engaging experience for each user.',
    'credit_hours': '4',
    'course_number': 'GSEN6150',
    'college': 'College of Engineering EN',
    'department': 'Grad Engineering - Multidiscpl GSEN',
    'dept_code': 'GSEN',
    'prerequisites': 'Information Systems Program 5100 Graduate B- Or Information Systems Program 5100 Undergraduate B- Or Computer Systems Engineering 6200 Graduate B-'},
    {'title': 'Mixed Reality',
    'description': 'Seeks to provide a strong foundation in the fundamentals of virtual and augmented reality, broadly defined as mixed reality (XR), and hands-on experience developing XR applications. Offers students an opportunity to dive into this burgeoning area of research and practice in computer science. Given the complex nature of XR environments, this course synthesizes theoretical and practice knowledge from various disciplines, including computer graphics, 3D interfaces, human-computer interaction, tracking systems, and perceptual psychology (to name a few). XR technologies have recently witnessed a resurgence of interest.',
    'credit_hours': '4',
    'course_number': 'CS5097',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Foundations of Software Security',
    'description': 'Provides an overview of various software security threats and some of the most effective countermeasures used to thwart both well-known and newly emerging software security threats. Introduces best practices and tools available to help minimize common software security attacks, recognizing that it is impossible to accomplish “perfect security” in software. Also studies secure coding concepts, tools, and practices in a high-level programming language.',
    'credit_hours': '4',
    'course_number': 'CY5003',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Cybersecurity CY',
    'dept_code': 'CY',
    'prerequisites': 'None'},
    {'title': 'Practicum',
    'description': 'Provides eligible students with an opportunity for practical experience.',
    'credit_hours': '2 TO 4',
    'course_number': 'CS6966',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Building Game Engines',
    'description': 'Discusses the components of game engines and strategies for their software implementation. Includes graphics management algorithms (animation, scene graph, level of detail); basic artificial intelligence algorithms (search, decision making, sensing); and related algorithmic issues (networking, threading, input processing). Explores the use of data-driven software design. Offers students an opportunity to use a rendering engine and to build and integrate several software components to create a complete game engine. Requires students to work on individual assignments and then develop a project in a team, which requires a report. Offers students an opportunity to learn team/project management; work division; team communication; and the software development cycle of implementation, testing, critique, and further iteration. Requires knowledge of computer graphics, differential calculus, operating systems concepts, and algorithms.',
    'credit_hours': '4',
    'course_number': 'CS5850',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Computer Systems',
    'description': 'Studies the structure, components, design, implementation, and internal operation of computer systems, focusing mainly on the operating system level. Reviews computer hardware and architecture including the arithmetic and logic unit, and the control unit. Covers current operating system components and construction techniques including the memory and memory controller, I/O device management, device drivers, memory management, file system structures, and the user interface. Introduces distributed operating systems. Discusses issues arising from concurrency and distribution, such as scheduling of concurrent processes, interprocess communication and synchronization, resource sharing and allocation, and deadlock management and resolution. Includes examples from real operating systems. Exposes students to the system concepts through programming exercises. Requires admission to MS program or completion of all transition courses.',
    'credit_hours': '4',
    'course_number': 'CS5600',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Directed Study',
    'description': 'Focuses on student examining standard computer science material in fresh ways or new computer science material that is not covered in formal courses. May be repeated without limit.',
    'credit_hours': '2 TO 4',
    'course_number': 'CS7976',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Smartphones-Based Web Development',
    'description': 'Covers application development for mobile devices using advanced development platforms. Focuses on how to write mobile applications using cross-platform development tools and processes. Topics include user interfaces, the software life cycle, persistent storage, networking using HTTP and other REST interfaces, and mobile/handheld data applications. Requires a final project.',
    'credit_hours': '4',
    'course_number': 'GSEN6350',
    'college': 'College of Engineering EN',
    'department': 'Grad Engineering - Multidiscpl GSEN',
    'dept_code': 'GSEN',
    'prerequisites': 'Information Systems Program 5100 Graduate B- Or Information Systems Program 5100 Undergraduate B- Or Computer Systems Engineering 6200 Graduate B-'},
    {'title': 'Data Science Capstone',
    'description': 'Offers students a capstone opportunity to practice data science skills learned in previous courses and to build a portfolio. Students practice visualization, data wrangling, and machine learning skills by applying them to semester-long term projects on real-world data. Students may either propose their own projects or choose from a selection of industry options. Emphasizes the overall data science process, including identification of the scientific problem, selection of appropriate machine learning methods, and visualization and communication of results. Lectures may include additional topics, including visualization, communication, and data science ethics.',
    'credit_hours': '4',
    'course_number': 'DS5500',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Data Science DS',
    'dept_code': 'DS',
    'prerequisites': '( Computer Science 5800 Graduate C- Or Electrical and Comp Engineerng 7205 Graduate C- ) And Data Science 5110 Graduate C- And Data Science 5220 Graduate C- And Data Science 5230 Graduate C-'},
    {'title': 'Directed Study',
    'description': 'Focuses on student examining standard computer science material in fresh ways or new computer science material that is not covered in formal courses. May be repeated up to three times.',
    'credit_hours': '2 TO 4',
    'course_number': 'CS5976',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'},
    {'title': 'Topics',
    'description': 'Offers students an opportunity to learn about timely issues, develop new skills, or explore areas of broad interest in an immersive, short-course format. Content and instructors vary by offering.',
    'credit_hours': '2',
    'course_number': 'CS5963',
    'college': 'Khoury Coll of Comp Sciences CS',
    'department': 'Computer Science CS',
    'dept_code': 'CS',
    'prerequisites': 'None'}],
    'core_course_numbers': ['CS5800', 'CS5010'],
    'max_credits': 32,
    'max_creds_per_sem': 8,
    'min_creds_per_sem': 8,
    'filtered_course_list': [[{'title': 'Web Development',
        'description': 'Discusses Web development for sites that are dynamic, data driven, and interactive. Focuses on the software development issues of integrating multiple languages, assorted data technologies, and Web interaction. Considers ASP.NET, C#, HTTP, HTML, CSS, XML, XSLT, JavaScript, AJAX, RSS/Atom, SQL, and Web services. Each student must deploy individually designed Web experiments that illustrate the Web technologies and at least one major integrative Web site project. Students may work in teams with the permission of the instructor. Each student or team must also create extensive documentation of their goals, plans, design decisions, accomplishments, and user guidelines. All source files must be open and be automatically served by a sources server.',
        'credit_hours': '4',
        'course_number': 'CS5610',
        'college': 'Khoury Coll of Comp Sciences CS',
        'department': 'Computer Science CS',
        'dept_code': 'CS',
        'prerequisites': 'None'},
    {'title': 'Fundamentals of Cloud Computing',
        'description': 'Covers fundamentals of cloud computing, including virtualization and containers, distributed file systems and object stores, infrastructure as a service platforms, open source cloud platforms, key big data platforms, and topics in data center scale systems. Combines classroom material delivered via lectures, readings from literature, student presentations, and a semester-long software project.',
        'credit_hours': '4',
        'course_number': 'CS6620',
        'college': 'Khoury Coll of Comp Sciences CS',
        'department': 'Computer Science CS',
        'dept_code': 'CS',
        'prerequisites': 'None'},
    {'title': 'Building Scalable Distributed Systems',
        'description': 'Covers the essential elements of distributed, concurrent systems and builds upon that knowledge with engineering principles and practical experience with state-of-the-art technologies and methods for building scalable systems. Scalability is an essential quality of internet-facing systems and requires specialized skills and knowledge to build systems that scale at low cost.',
        'credit_hours': '4',
        'course_number': 'CS6650',
        'college': 'Khoury Coll of Comp Sciences CS',
        'department': 'Computer Science CS',
        'dept_code': 'CS',
        'prerequisites': 'None'},
    {'title': 'Web Design and User Experience Engineering',
        'description': 'Focuses on advanced user interface engineering, with a strong emphasis on utility and personalized user experiences development. Through the use of tools like React and Flutter, explores how to engineer highly personalized web applications tailored to individual user needs and preferences. Topics include responsive layouts, interactive elements, animation integration, and performance tuning. Offers students an opportunity to gain hands-on experience in building interfaces that dynamically adapt to user behavior, preferences, and context, ensuring a unique and engaging experience for each user.',
        'credit_hours': '4',
        'course_number': 'GSEN6150',
        'college': 'College of Engineering EN',
        'department': 'Grad Engineering - Multidiscpl GSEN',
        'dept_code': 'GSEN',
        'prerequisites': 'Information Systems Program 5100 Graduate B- Or Information Systems Program 5100 Undergraduate B- Or Computer Systems Engineering 6200 Graduate B-'},
    {'title': 'Advanced Software Development',
        'description': 'Designed to integrate academic concepts and practical experience of software design by having students work as part of a programming team, with an option to lead a subteam. Offers students an opportunity to study, in-depth, some aspects of the development process. The goal is to have students participate in a large-scale project, taking time to reflect and analyze the work and the process, rather than concentrating exclusively on the final product. Students who do not meet course prerequisites may seek permission of instructor.',
        'credit_hours': '4',
        'course_number': 'CS6510',
        'college': 'Khoury Coll of Comp Sciences CS',
        'department': 'Computer Science CS',
        'dept_code': 'CS',
        'prerequisites': '( Computer Science 5004 Graduate B- Or Computer Science 5010 Graduate C- ) And Computer Science 5500 Graduate C-'},
    {'title': 'Formal Specification, Verification, and Synthesis',
        'description': 'Covers software and system modeling (how to formally describe the behavior of software and systems); specification (how to formally state the properties that the system should have); verification (how to check whether\x014and ultimately prove\x014that a system satisfies its specification); and synthesis (how to automatically generate software and systems that are "correct-by-construction").',
        'credit_hours': '4',
        'course_number': 'CS7430',
        'college': 'Khoury Coll of Comp Sciences CS',
        'department': 'Computer Science CS',
        'dept_code': 'CS',
        'prerequisites': 'None'}]],
    'number_of_plans': 1,
    'semester_plans': [{'plan_number': 1,
    'total_semesters': 4,
    'semester_schedule': [{'semester': 1,
        'courses': [{'course_number': 'CS5010',
        'title': 'Programming Design Paradigm',
        'reason': 'This foundational course introduces modern program design paradigms, essential for understanding subsequent courses and building strong programming skills early.',
        'credit_hours': '4',
        'type': 'core'},
        {'course_number': 'CS5800',
        'title': 'Algorithms',
        'reason': 'Provides critical mathematical techniques for algorithm analysis, supporting both core understanding and elective courses like distributed systems and cloud computing.',
        'credit_hours': '4',
        'type': 'core'}],
        'total_credits': 8,
        'notes': 'Prioritized foundational courses early to establish core knowledge base.'},
        {'semester': 2,
        'courses': [{'course_number': 'CS6620',
        'title': 'Fundamentals of Cloud Computing',
        'reason': 'Introduces key cloud concepts, aligning with student goals in cloud computing and web development, and has no prerequisites.',
        'credit_hours': '4',
        'type': 'elective'},
        {'course_number': 'CS5610',
        'title': 'Web Development',
        'reason': 'Builds practical web development skills necessary for front-end and back-end development, complementing cloud knowledge.',
        'credit_hours': '4',
        'type': 'elective'}],
        'total_credits': 8,
        'notes': 'Early focus on cloud and web development to align with student goals.'},
        {'semester': 3,
        'courses': [{'course_number': 'CS6650',
        'title': 'Building Scalable Distributed Systems',
        'reason': 'Expands knowledge in distributed systems, crucial for cloud computing and scalable web applications; no prerequisites.',
        'credit_hours': '4',
        'type': 'elective'},
        {'course_number': 'CS6510',
        'title': 'Advanced Software Development',
        'reason': 'Provides practical experience in software design and teamwork, essential for full-stack development and project work.',
        'credit_hours': '4',
        'type': 'elective'}],
        'total_credits': 8,
        'notes': 'Focus on distributed systems and advanced software practices.'},
        {'semester': 4,
        'courses': [{'course_number': 'CS7430',
        'title': 'Formal Specification, Verification, and Synthesis',
        'reason': 'Offers advanced understanding of formal methods, beneficial for reliable software and system correctness.',
        'credit_hours': '4',
        'type': 'elective'},
        {'course_number': 'GSEN6150',
        'title': 'Web Design and User Experience Engineering',
        'reason': 'Enhances skills in user interface engineering with modern tools like React, supporting front-end expertise.',
        'credit_hours': '4',
        'type': 'elective'}],
        'total_credits': 8,
        'notes': 'Capstone courses focusing on formal methods and UI/UX design.'}],
    'prerequisite_flow': 'Courses were scheduled respecting prerequisites by placing foundational courses (CS5010 and CS5800) in the first semester. Subsequent courses like CS6620, CS5610, CS6650, and CS6510 do not have prerequisites or are independent, allowing flexible placement. Advanced courses such as CS7430 and GSEN6150 are scheduled in the last semester, after core and intermediate courses, ensuring all prerequisites are met.',
    'reason_behind_planning': "This plan begins with core foundational courses in programming design and algorithms to establish essential skills. The second semester introduces cloud computing and web development, directly aligning with the student's goal of becoming a web developer with cloud focus. The third semester emphasizes distributed systems and software development practices, building on prior knowledge for scalable and reliable system design. The final semester consolidates advanced topics like formal verification and UI engineering, providing depth in both back-end reliability and front-end user experience. The workload is balanced evenly across four semesters, each with 8 credits, respecting prerequisites and ensuring a logical progression from fundamentals to advanced topics. The structure maximizes learning outcomes while adhering to constraints, avoiding course overload, and ensuring all core and elective requirements are met within the four-semester limit.",
    'total_credits': 32}],
    'planning_completed': True,
    "rescheduling_attributes":{}
    }

    return st

def get_course_fetching_state(query,college,department):
    
    st = {
        "query":query,
        "college":college,
        "department":department
    }
    
    return st

def get_course_replacement_state():
    query = 'reschedule plan 1: replace CS5800 with Large Language model course from college of enginnering and replace CS5610 with AI and Data Science and other good subjects'
    st = {
        "query":query,
        "main_query":"i want to become a web developer in both fron end abd back end developement with focus in cloud computing.",
        'core_course_numbers': ['CS5800', 'CS5010'],
        'number_of_plans': 1,
        'semester_plans': [{'plan_number': 1,
        'total_semesters': 4,
        'semester_schedule': [{'semester': 1,
            'courses': [{'course_number': 'CS5010',
            'title': 'Programming Design Paradigm',
            'reason': 'This foundational course introduces modern program design paradigms, essential for understanding subsequent courses and building strong programming skills early.',
            'credit_hours': '4',
            'type': 'core'},
            {'course_number': 'CS5800',
            'title': 'Algorithms',
            'reason': 'Provides critical mathematical techniques for algorithm analysis, supporting both core understanding and elective courses like distributed systems and cloud computing.',
            'credit_hours': '4',
            'type': 'core'}],
            'total_credits': 8,
            'notes': 'Prioritized foundational courses early to establish core knowledge base.'},
            {'semester': 2,
            'courses': [{'course_number': 'CS6620',
            'title': 'Fundamentals of Cloud Computing',
            'reason': 'Introduces key cloud concepts, aligning with student goals in cloud computing and web development, and has no prerequisites.',
            'credit_hours': '4',
            'type': 'elective'},
            {'course_number': 'CS5610',
            'title': 'Web Development',
            'reason': 'Builds practical web development skills necessary for front-end and back-end development, complementing cloud knowledge.',
            'credit_hours': '4',
            'type': 'elective'}],
            'total_credits': 8,
            'notes': 'Early focus on cloud and web development to align with student goals.'},
            {'semester': 3,
            'courses': [{'course_number': 'CS6650',
            'title': 'Building Scalable Distributed Systems',
            'reason': 'Expands knowledge in distributed systems, crucial for cloud computing and scalable web applications; no prerequisites.',
            'credit_hours': '4',
            'type': 'elective'},
            {'course_number': 'CS6510',
            'title': 'Advanced Software Development',
            'reason': 'Provides practical experience in software design and teamwork, essential for full-stack development and project work.',
            'credit_hours': '4',
            'type': 'elective'}],
            'total_credits': 8,
            'notes': 'Focus on distributed systems and advanced software practices.'},
            {'semester': 4,
            'courses': [{'course_number': 'CS7430',
            'title': 'Formal Specification, Verification, and Synthesis',
            'reason': 'Offers advanced understanding of formal methods, beneficial for reliable software and system correctness.',
            'credit_hours': '4',
            'type': 'elective'},
            {'course_number': 'GSEN6150',
            'title': 'Web Design and User Experience Engineering',
            'reason': 'Enhances skills in user interface engineering with modern tools like React, supporting front-end expertise.',
            'credit_hours': '4',
            'type': 'elective'}],
            'total_credits': 8,
            'notes': 'Capstone courses focusing on formal methods and UI/UX design.'}],
        'prerequisite_flow': 'Courses were scheduled respecting prerequisites by placing foundational courses (CS5010 and CS5800) in the first semester. Subsequent courses like CS6620, CS5610, CS6650, and CS6510 do not have prerequisites or are independent, allowing flexible placement. Advanced courses such as CS7430 and GSEN6150 are scheduled in the last semester, after core and intermediate courses, ensuring all prerequisites are met.',
        'reason_behind_planning': "This plan begins with core foundational courses in programming design and algorithms to establish essential skills. The second semester introduces cloud computing and web development, directly aligning with the student's goal of becoming a web developer with cloud focus. The third semester emphasizes distributed systems and software development practices, building on prior knowledge for scalable and reliable system design. The final semester consolidates advanced topics like formal verification and UI engineering, providing depth in both back-end reliability and front-end user experience. The workload is balanced evenly across four semesters, each with 8 credits, respecting prerequisites and ensuring a logical progression from fundamentals to advanced topics. The structure maximizes learning outcomes while adhering to constraints, avoiding course overload, and ensuring all core and elective requirements are met within the four-semester limit.",
        'total_credits': 32}],
        'planning_completed': True,
        "rescheduling_attributes":{
            'CS5800': 'Large Language model from college of engineering'
        },
        "plan_number_to_change":1
    }
    return st

def get_short_planning_state():
    st={ 
        "query" : "i am in my second semester and i have done these courses \n1. introduction to data proceesing and management\n2. supervised ml \n3. algorithms\n4. NLP\n5. large language models \nand i wanto to become a MLOPS ENGINEER WHAT COURSES TO TAKE NEXT?",
        "college" : "kHOURY",
        "department" : "Data Science DS",
    }
    return st